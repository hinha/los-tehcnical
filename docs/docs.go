// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag/v2"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},"swagger":"2.0","info":{"description":"{{escape .Description}}","title":"{{.Title}}","termsOfService":"http://swagger.io/terms/","contact":{"name":"Martinus Dawan","email":"martinuz.dawan9@gmail.com"},"version":"{{.Version}}"},"host":"{{.Host}}","basePath":"{{.BasePath}}","paths":{"/loans":{"post":{"description":"Creates a new loan with the given borrower and loan details","consumes":["application/json"],"produces":["application/json"],"tags":["loans"],"summary":"Create a new loan","parameters":[{"description":"Loan creation request","name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/loan.CreateLoanRequest"}}],"responses":{"201":{"description":"Loan created successfully","schema":{"$ref":"#/definitions/response.Response"}},"400":{"description":"Invalid request or validation error","schema":{"$ref":"#/definitions/response.Response"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/response.Response"}}}}},"/loans/borrower/{borrowerId}":{"get":{"description":"Retrieves all loans associated with a borrower","consumes":["application/json"],"produces":["application/json"],"tags":["loans"],"summary":"Get loans by borrower","parameters":[{"type":"string","description":"Borrower ID","name":"borrowerId","in":"path","required":true}],"responses":{"200":{"description":"List of loans\" \"List of loans","schema":{"type":"array","items":{"$ref":"#/definitions/response.Response"}}},"500":{"description":"Internal server error","schema":{"type":"string"}}}}},"/loans/state/{state}":{"get":{"description":"Retrieves all loans in a specific state","consumes":["application/json"],"produces":["application/json"],"tags":["loans"],"summary":"Get loans by state","parameters":[{"enum":["PROPOSED","APPROVED","INVESTED","DISBURSED"],"type":"string","description":"Loan state","name":"state","in":"path","required":true}],"responses":{"200":{"description":"List of loans","schema":{"type":"array","items":{"$ref":"#/definitions/response.Response"}}},"400":{"description":"Invalid state","schema":{"type":"string"}},"500":{"description":"Internal server error","schema":{"type":"string"}}}}},"/loans/{id}":{"get":{"description":"Retrieves a loan by its ID","consumes":["application/json"],"produces":["application/json"],"tags":["loans"],"summary":"Get loan by ID","parameters":[{"type":"string","description":"Loan ID","name":"id","in":"path","required":true}],"responses":{"200":{"description":"Loan details retrieved successfully","schema":{"$ref":"#/definitions/response.Response"}},"404":{"description":"Loan not found","schema":{"$ref":"#/definitions/response.Response"}}}}},"/loans/{id}/agreement":{"post":{"description":"Generates an agreement letter for a loan","consumes":["application/json"],"produces":["application/json"],"tags":["loans"],"summary":"Generate agreement letter","parameters":[{"type":"string","description":"Loan ID","name":"id","in":"path","required":true},{"description":"Agreement letter details","name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/loan.GenerateAgreementLetterRequest"}}],"responses":{"200":{"description":"Agreement letter generated successfully","schema":{"type":"string"}},"400":{"description":"Invalid request","schema":{"type":"string"}}}}},"/loans/{id}/approve":{"post":{"description":"Approves a loan with validator details","consumes":["application/json"],"produces":["application/json"],"tags":["loans"],"summary":"Approve a loan","parameters":[{"type":"string","description":"Loan ID","name":"id","in":"path","required":true},{"description":"Loan approval request","name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/loan.ApproveLoanRequest"}}],"responses":{"200":{"description":"Loan approved successfully","schema":{"$ref":"#/definitions/response.Response"}},"400":{"description":"Invalid request or state validation error","schema":{"$ref":"#/definitions/response.Response"}}}}},"/loans/{id}/disburse":{"post":{"description":"Disburses an approved and invested loan","consumes":["application/json"],"produces":["application/json"],"tags":["loans"],"parameters":[{"type":"string","description":"Loan ID","name":"id","in":"path","required":true},{"description":"Disbursement details","name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/loan.DisburseLoanRequest"}}],"responses":{"200":{"description":"Loan disbursed successfully","schema":{"type":"string"}},"400":{"description":"Invalid request or state validation error","schema":{"type":"string"}}}}},"/loans/{id}/invest":{"post":{"description":"Adds an investment to an existing loan","consumes":["application/json"],"produces":["application/json"],"tags":["loans"],"summary":"Add investment to loan","parameters":[{"type":"string","description":"Loan ID","name":"id","in":"path","required":true},{"description":"Investment details","name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/loan.AddInvestmentRequest"}}],"responses":{"200":{"description":"Investment added successfully","schema":{"type":"string"}},"400":{"description":"Invalid request or state validation error","schema":{"type":"string"}}}}}},"definitions":{"loan.AddInvestmentRequest":{"type":"object","required":["amount","email","investorId"],"properties":{"amount":{"type":"number"},"email":{"type":"string"},"investorId":{"type":"string"}}},"loan.ApproveLoanRequest":{"type":"object","required":["proofUrl","validatorId"],"properties":{"proofUrl":{"type":"string"},"validatorId":{"type":"string"}}},"loan.CreateLoanRequest":{"type":"object","required":["borrowerId","principalAmount","rate","roi"],"properties":{"borrowerId":{"type":"string"},"principalAmount":{"type":"number"},"rate":{"type":"number","minimum":0},"roi":{"type":"number","minimum":0}}},"loan.DisburseLoanRequest":{"type":"object","required":["fieldOfficerId","signedAgreement"],"properties":{"fieldOfficerId":{"type":"string"},"signedAgreement":{"type":"string"}}},"loan.GenerateAgreementLetterRequest":{"type":"object","required":["letterUrl"],"properties":{"letterUrl":{"type":"string"}}},"response.Response":{"type":"object","properties":{"code":{"type":"integer","example":200},"data":{},"errors":{},"message":{"type":"string","example":"OK"}}}}}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Loan Service API",
	Description:      "API for managing loans",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
